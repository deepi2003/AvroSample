import com.commercehub.gradle.plugin.avro.GenerateAvroJavaTask

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "com.commercehub.gradle.plugin:gradle-avro-plugin:0.20.0"
    }
}

plugins {
    id 'java'
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/snapshot' }
}


tasks.register("generateAvro", GenerateAvroJavaTask) {
    source("src/main/resources/avro/user.avsc")
    outputDir = file("src/main/java/")
}


schemaRegistry {
    def uri = project.schemaRegistryUrl
    println("SCHEMA_REGISTRY_URL: " + uri)
    url = uri
    credentials {
        username = project.schemaRegistryUsername
        password = project.schemaRegistryPassword
    }

    def userVersion = ".1.0"
    def eventVersion =".1.0"

    def schemas = {
        subject('event'.concat(eventVersion), project.file('./src/main/resources/avro/event.avsc').toString(), 'AVRO')
        subject('user'.concat(userVersion).concat('-value'), project.file('./src/main/resources/avro/user.avsc').toString(), 'AVRO')
                .addReference('com.deepti.kafka.sample.avro.Event', 'event'.concat(eventVersion), 1)
    }

    def schemaConfigs = {
        subject('event'.concat(eventVersion), 'BACKWARD')
        subject('user'.concat(userVersion).concat('-value'), 'BACKWARD')
    }

    register(schemas)
    compatibility(schemas)
    config(schemaConfigs)
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-web:2.3.3.RELEASE'){
        exclude group:'ch.qos.logback'//logback-classic:1.2.3'
    }
    implementation 'org.apache.kafka:kafka-clients:2.5.0'
    implementation 'org.apache.kafka:kafka-streams:2.5.0'
    implementation 'org.scala-lang:scala-library:2.12.8'
    implementation 'org.apache.avro:avro:1.9.2'
    implementation 'org.apache.avro:avro-maven-plugin:1.9.2'
    implementation ('com.101tec:zkclient:0.9') {
       exclude group: 'org.slf4j'
    }

    implementation 'javax.ws.rs:javax.ws.rs-api:2.1'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.10.2'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.10.2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.3.3.RELEASE'
    testCompile 'org.springframework.kafka:spring-kafka-test:2.5.5.RELEASE'
    testCompile 'org.apache.kafka:kafka_2.12:2.5.1:test'  // required to get correct version for spring-kafka-test
    testCompile 'org.apache.kafka:kafka_2.12:2.5.1'
    implementation 'org.springframework.kafka:spring-kafka:2.5.5.RELEASE'
}

group = 'com.deepti.kafka.sample.avro'
version = '1.0-SNAPSHOT'
sourceCompatibility = '10'
